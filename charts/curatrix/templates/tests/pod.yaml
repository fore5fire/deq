apiVersion: v1
kind: Pod
metadata:
  name: {{ template "fullname" . }}-tests
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}
    chartVersion: {{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    service: curatrix-tests
  annotations:
    "helm.sh/hook": test-success
spec:
  restartPolicy: Never
  {{- if .Values.privateKey }}
  volumes:
  - name: {{ template "kc.auth_service.secret_volume_name" . }}
    secret:
      secretName: {{ .Values.privateKey.secret }}
      items:
      - key: {{ .Values.privateKey.item }}
        path: {{ template "kc.auth_service.private_key_path" . }}
  {{- end }}
  initContainers:
  - name: service-ready
    image: busybox
    command: ['sh', '-c', 'until nslookup {{ template "fullname" . }}; do echo waiting for {{ template "fullname" . }}; sleep 2; done;']
  containers:
    - name: {{ .Chart.Name }}
      image: "{{ .Values.tests.image.repository }}:{{ .Values.tests.image.tag }}"
      imagePullPolicy: {{ .Values.tests.image.pullPolicy }}
      env:
      - name: TEST_TARGET_ENDPOINT
        value: http://{{ template "fullname" . }}/graphql
      - name: MONGODB_ENDPOINT
        value: {{ .Values.mongodbEndpoint }}
      - name: LOG_LEVEL
        value: {{ .Values.logLevel }}
      {{- if .Values.bootstrapAdmin }}
      - name: BOOTSTRAP_ADMIN_EMAIL
        value: {{ .Values.bootstrapAdmin.email }}
      - name: BOOTSTRAP_ADMIN_PASSWORD
        value: {{ .Values.bootstrapAdmin.password }}
      {{- end }}
      {{- if .Values.privateKey }}
      - name: JWT_PRIVATE_KEY_PATH
        value: {{ template "kc.auth_service.mount_path" . }}/{{ template "kc.auth_service.private_key_path" . }}
      {{- end }}
      ports:
        - containerPort: {{ template "kc.auth_service.internal_port" . }}
      livenessProbe:
        httpGet:
          path: /alive
          port: {{ template "kc.auth_service.health_port" . }}
      readinessProbe:
        httpGet:
          path: /ready
          port: {{ template "kc.auth_service.health_port" . }}
      {{- if .Values.privateKey }}
      volumeMounts:
      - name: {{ template "kc.auth_service.secret_volume_name" . }}
        mountPath: {{ template "kc.auth_service.mount_path" . }}
        readOnly: true
      {{- end }}
      resources:
{{ toYaml .Values.tests.resources | indent 12 }}
  {{- if .Values.tests.image.pullSecret }}
  imagePullSecrets:
  - name: {{ .Values.tests.image.pullSecret }}
  {{- end }}
{{- if .Values.nodeSelector }}
  nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}

---

apiVersion: v1
kind: Pod
metadata:
  name: {{ template "fullname" . }}-tests-2
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}
    chartVersion: {{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    service: curatrix-tests
  annotations:
    "helm.sh/hook": test-success
spec:
  restartPolicy: Never
  {{- if .Values.privateKey }}
  volumes:
  - name: {{ template "kc.auth_service.secret_volume_name" . }}
    secret:
      secretName: {{ .Values.privateKey.secret }}
      items:
      - key: {{ .Values.privateKey.item }}
        path: {{ template "kc.auth_service.private_key_path" . }}
  {{- end }}
  initContainers:
  - name: service-ready
    image: busybox
    command: ['sh', '-c', 'until nslookup {{ template "fullname" . }}; do echo waiting for {{ template "fullname" . }}; sleep 2; done;']
  containers:
    - name: {{ .Chart.Name }}
      image: "{{ .Values.tests.image.repository }}:{{ .Values.tests.image.tag }}"
      imagePullPolicy: {{ .Values.tests.image.pullPolicy }}
      env:
      - name: TEST_TARGET_ENDPOINT
        value: http://{{ template "fullname" . }}/graphql
      - name: MONGODB_ENDPOINT
        value: {{ .Values.mongodbEndpoint }}
      - name: LOG_LEVEL
        value: {{ .Values.logLevel }}
      {{- if .Values.bootstrapAdmin }}
      - name: BOOTSTRAP_ADMIN_EMAIL
        value: {{ .Values.bootstrapAdmin.email }}
      - name: BOOTSTRAP_ADMIN_PASSWORD
        value: {{ .Values.bootstrapAdmin.password }}
      {{- end }}
      {{- if .Values.privateKey }}
      - name: JWT_PRIVATE_KEY_PATH
        value: {{ template "kc.auth_service.mount_path" . }}/{{ template "kc.auth_service.private_key_path" . }}
      {{- end }}
      ports:
        - containerPort: {{ template "kc.auth_service.internal_port" . }}
      livenessProbe:
        httpGet:
          path: /alive
          port: {{ template "kc.auth_service.health_port" . }}
      readinessProbe:
        httpGet:
          path: /ready
          port: {{ template "kc.auth_service.health_port" . }}
      {{- if .Values.privateKey }}
      volumeMounts:
      - name: {{ template "kc.auth_service.secret_volume_name" . }}
        mountPath: {{ template "kc.auth_service.mount_path" . }}
        readOnly: true
      {{- end }}
      resources:
{{ toYaml .Values.tests.resources | indent 12 }}
  {{- if .Values.tests.image.pullSecret }}
  imagePullSecrets:
  - name: {{ .Values.tests.image.pullSecret }}
  {{- end }}
{{- if .Values.nodeSelector }}
  nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
