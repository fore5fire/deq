syntax = "proto3";
package eventstore;

import "google/protobuf/any.proto";
import "google/protobuf/none.proto";

service EventStore {
  rpc CreateEvent       (CreateEventRequest)       returns (Event);
  rpc StreamEvents      (ListEventsRequest)        returns (stream Event);
  rpc UpdateEventStatus (stream UpdateEventStatusRequest) returns (UpdateEventStatusResponse);
  // rpc ResetChannel (ResetChannelRequest) returns (ResetChannelResponse);
  rpc InsertEvents      (stream InsertEventsRequest) returns (InsertEventsResponse);
  rpc GetChannel        (GetChannelRequest)    returns (Channel)
  rpc EnsureChannel     (EnsureChannelRequest) returns (google.protobuf.None);
}


message Channel {
  string name = 1;
  bytes  min_id = 2;
  bytes  max_id = 3;
  uint32 requeue_delay_miliseconds = 4;
  // uint32 requeue_limit = 5;
}

message Event {
  google.protobuf.Any payload = 1;
  bytes               id = 2;

  enum Status {
    PENDING = 0;
    PROCESSED = 1;
    WILL_NOT_PROCESS = 2;
  }
}


message CreateEventRequest {
  Event event = 1;
}


message EnsureChannelRequest {
  Channel channel = 1;
}

message GetChannelRequest {
  string name = 1;
}

message ListEventsRequest {
  string channel = 1;
  bool   follow = 2;
}

message UpdateEventStatusRequest {
  Event.State event_state = 1;
}

message UpdateEventStatusResponse {

}


message InsertEventsRequest {
  Event event = 1;
}

message InsertEventsResponse {

}
