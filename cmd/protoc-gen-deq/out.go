package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _out_go_tpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\xdb\x46\xf2\x7f\x4d\x7e\x8a\xa9\x90\x06\x62\x2a\xaf\xf0\x7f\x2b\x24\x2f\x02\xbb\xff\x54\xc0\x35\x35\x6a\x1f\x1a\x20\x28\x02\x7a\x39\x94\x08\x4b\x5c\x65\xb9\xf2\x03\x04\x7e\xf7\xc3\xcc\x2e\x97\x4b\x8a\x92\x1f\x52\xa7\x77\xb8\xf3\x0b\x9b\xe4\x72\x67\x7e\x3b\xcf\x33\xe6\x74\x3a\x8d\xa7\x53\x80\x0f\x58\xa2\x4e\x0d\x66\x20\x55\x86\x02\xce\x14\x94\xca\xc0\x5a\x65\x45\x7e\x2f\xf8\x95\x4a\x6d\xb5\xc4\x19\xec\x76\x20\x2e\xf8\x1a\xea\x3a\x26\x02\x9b\x54\x5e\xa7\x0b\xe4\x95\x73\x77\x5d\xd7\x71\x5c\xac\x37\x4a\x1b\x18\xc7\xd1\x48\xaa\xd2\xe0\x9d\x19\xc5\xd1\x28\x5f\xd3\x9f\xdd\xee\x04\x8a\x1c\xc4\x2f\x69\xf5\x2b\x9a\xa5\xca\x2a\xda\x12\x8d\xaa\xfb\x52\xd2\x5b\x95\xd1\x45\xb9\xa8\xdc\x9b\x58\x66\xbc\xbc\xdb\xd1\x9e\xcb\xfb\x0d\x56\x75\x3d\x32\xc5\x1a\x47\xbb\x1d\x96\x19\x71\x8b\x46\x8b\xc2\xac\xd2\x2b\x21\xd5\x7a\x7a\x9d\x1a\xb9\xc4\x53\x95\xe1\x34\xc3\xaf\xa3\x66\x67\xc0\xed\x84\xd9\x1d\xdc\x32\x4d\xe5\x75\x8f\x39\xdd\x81\x4e\xcb\x05\xc2\xab\xcd\xf5\x62\x02\xaf\x36\xa9\x59\xc2\xec\x1d\x88\x39\x9f\xb4\x72\x18\x69\xb5\xae\x61\x44\x57\xa9\x59\xd6\x75\x97\x50\x12\xc7\x74\x67\x29\xd9\xc3\xb0\xb8\xcc\xfd\x86\x64\x28\x3e\xa8\x8f\xe9\x1a\xeb\xfa\xe7\x1b\x2c\x0d\x54\x46\x6f\xa5\x81\x5d\x1c\xcd\xcf\x20\x8a\xa2\x08\x00\xac\x70\xe2\xe8\x54\x63\x6a\xf0\xb2\x58\x23\x00\x90\x34\x04\x5d\xc7\xd1\x19\xe6\xe9\x76\x65\x2e\x4c\x6a\x10\x32\xfc\x2a\x98\x14\xdf\xc6\x91\x7d\xea\x7e\xfa\x8b\xf3\x32\xc3\x3b\xac\xec\xe2\xe7\x3f\x1d\x23\x82\xef\x61\xc1\x1b\xbe\xf9\x1d\xf3\xba\x8e\x1b\xd8\x5f\x82\x17\x2e\xd5\xa6\x90\xa7\xaa\xcc\x8b\x05\x14\xa5\x41\x9d\xa7\x12\xe9\x00\xcc\xe8\x52\xf5\x8f\x38\xf6\x20\x12\x18\xbf\xe9\xaf\x4e\x00\xb5\x56\x3a\x21\x56\xd3\xe9\x9e\x7c\xe6\x06\x35\x14\x15\xa4\x25\x14\x86\x4c\x58\x69\xc8\x95\xde\x7b\xaf\x12\x30\x37\xb0\x4c\xed\x9b\x19\x96\xa6\x90\xe9\x2a\xc0\x67\x14\x91\xf7\x50\x88\xee\x04\xf0\x4e\xe2\xc6\x80\x59\xa6\xf4\x0b\xc1\xaa\x64\xcd\x26\x04\x1a\xcd\x56\x97\x15\xa4\x7b\xcc\xc4\xb0\x2e\x2d\xd6\x50\x22\x1f\xf1\xce\x8c\xa5\xb9\x03\xe7\x1f\xe2\xd4\xfe\x3d\x2a\x88\xe8\x74\xa5\x2a\x1c\x27\x5e\xf8\x9f\x3e\x7d\xfa\x32\xc8\x2b\xb0\x1d\xba\x85\xee\xf1\xe2\xc8\x29\xe9\x80\xf2\x9c\xc4\x09\xa3\x3f\x2b\x09\xa1\xa4\x07\xfb\xe8\x98\xb6\xd6\x73\xd6\x42\xa1\xca\x53\xb5\xde\xac\xd0\x20\xb9\x79\xd1\x3c\x04\xe9\x9e\x66\x13\x50\x9a\x74\xc1\x87\x9a\x10\xa3\x22\x07\x55\x22\x28\x29\xb7\x1a\x33\x01\x17\x88\x5d\xc0\x82\xa1\x90\x76\xd7\x4a\x23\x14\x65\xae\xf4\x9a\xc9\x8a\x38\xdf\x96\x12\xc6\x85\x81\x37\x87\xa4\x91\xc0\x73\xa4\x0d\xbb\x38\x8e\x8a\x1c\x7e\x28\x8c\xf0\x18\x88\x08\xad\x44\x11\x9f\xcd\x2e\xfc\xac\xf5\x38\x81\x1f\xde\x41\x59\xac\x78\x2d\xb2\x42\xa3\xfb\x49\xf7\xad\x38\x8a\xea\xb8\xbb\x7e\x48\x7a\x71\xc4\x91\x27\xc3\xaf\xd6\xf6\x66\xef\x5a\x52\xec\x3c\x49\x1c\x47\xc8\x68\xdd\x9a\x55\x9e\x38\xe2\x6c\xd6\xd7\xf8\x58\xb4\x2d\x80\x1c\x22\xca\xd7\x86\x10\x29\x9d\x8f\x29\x7c\xdf\xa0\x36\xad\x3a\xc0\xa8\x3d\x13\x98\xc1\x8f\x37\x23\x46\x92\x10\xea\xb8\xa1\x86\x13\x22\x48\xd6\xf4\x18\x25\x39\xe3\x26\x38\xcd\x41\x5b\x7b\xdf\xed\x38\x88\x52\xec\x8e\x7d\x30\x16\x17\xa8\x6f\x0a\x69\xa3\x68\xe3\x78\xfb\xa1\xa8\x75\x06\x43\x4f\x2b\x58\xa7\x9b\xcf\x36\xc0\x35\x71\xae\x81\xf8\x11\x6f\x87\x48\x8c\x13\x8e\x7d\xfb\xa4\x77\xfe\xac\xaf\x87\xd6\x49\xb2\x96\xe7\x0c\xd6\xe9\x35\x8e\xf7\x38\x27\x13\x92\x18\x9f\xef\x95\x3b\x0d\x51\xe1\xdc\xc2\x17\x74\xe2\xf6\xc0\x3e\x67\x58\x81\x4a\x82\x15\xee\xeb\x70\x4f\xe0\x90\x29\x04\xee\xe5\x5d\x80\xef\x38\xb6\x0f\xba\x01\x0a\xa6\x4c\x36\x23\x45\x3f\x6c\x58\xad\x1d\x34\xa2\xa2\x94\x4a\x6b\x94\x64\x3c\x44\xe3\xc7\x8a\xac\xc5\x12\x74\x16\xb3\xae\x16\x74\xe6\x12\x6f\xc7\x54\x4c\x70\x96\x81\xba\x4e\xe2\xc8\xd9\xf7\xba\x5a\x88\x7f\x96\xeb\x54\x57\xcb\x74\x35\x46\x71\x9e\xde\xaf\x54\x9a\x3d\xc9\x98\xb7\xcd\x7e\xd8\xd8\xdd\x87\x0c\xf7\xf5\x90\x44\x88\xf2\xfc\x6c\x06\xed\x0f\x8a\xf9\xd9\x24\x8e\xc2\x1c\x39\x03\x42\x4a\x0f\xdb\x14\x3d\xe3\x57\xdb\x7b\x5a\x0d\x13\xf5\x0c\x50\x84\xf7\xb4\xee\x16\x3c\x23\xbf\xe0\xf2\xf4\xcc\x23\xb0\xf7\x64\x46\x3d\x6f\x7b\xc8\x38\xfa\x56\x71\xa9\x1a\xe3\x18\x34\x88\x04\xda\x74\xdd\x31\x8e\xab\x6d\xee\xa3\x10\x86\xa6\x21\x7e\x75\xda\x3a\xa6\x24\x4f\x73\x57\x33\x95\x8e\x1e\xda\xc5\x83\xb2\x3f\x6f\x34\xc9\x3f\x84\xe5\xe5\x64\xcf\xe2\xf3\x0b\x43\x6e\xf0\x62\x1a\x6a\xdc\xcc\x46\x0d\x8e\x91\x39\x48\x78\xb7\x27\xcf\xd1\x6e\x27\xce\xb5\x32\xea\xff\xb7\xab\x95\xdd\x3b\xb2\x32\x65\xdf\x9b\x80\xba\x26\x45\x49\x61\xe3\xd2\xe7\xa1\xf7\xff\x64\xea\xea\x3a\xa4\xcb\xaf\x73\x4e\x3a\xc6\xe8\xd1\x47\xbb\x40\xb3\x77\x3a\x1b\x1c\x5c\x5c\x24\xde\xc7\x41\xc2\x3b\x07\xca\x67\x07\x97\x1c\x0c\xae\x37\x2b\x2a\x75\x47\x72\x55\x60\x69\x46\x20\xc0\x46\xd1\x76\xa5\xb2\xc8\xda\xa5\x30\xbb\x64\x98\x17\x65\xb0\x9d\xdf\x38\x39\x12\xa0\x5d\xee\x71\x4f\xea\xfa\x94\x37\x76\x2b\xbe\x8b\xfb\x52\xbe\x5f\xad\x2e\xd5\x50\x21\x32\x01\x8d\x6b\xe5\x6a\x76\xbb\x3b\xb1\x3e\x66\x1b\x88\x7e\xf8\x8f\x3e\x90\xfc\xc0\x09\x10\x9a\xb8\x3e\x48\xb9\xc8\xbc\x4c\x29\xd4\x43\xe0\xda\xb0\x57\x61\xf6\xe9\xb2\xf1\x1e\xa0\x4b\x4b\x4f\x20\xfd\xfe\x36\x2d\x5e\x06\xf4\xc5\xf6\xea\xb1\x74\x97\x69\x99\xad\x50\x03\x59\xe9\x78\x6f\xf5\x40\xe0\x4b\xe5\xb5\xa0\xf6\xd0\xab\x84\xcb\x84\x3e\x43\xaa\x58\xc6\x6a\x63\x2a\x78\x43\x5a\xa4\xdb\xdf\x36\x54\xd1\x55\x09\x0c\x9f\xc0\xd6\xe2\x7d\x62\x2c\xf2\xe7\x12\x3b\x27\x51\xf4\xb2\xfd\xa0\x20\x0e\x47\xf9\xa3\xe5\x00\xb5\x98\xab\xc7\x71\x08\x54\xe8\x2d\xd9\xbb\x59\xdb\x51\x8b\x70\x0a\x10\xf8\xd0\x31\xd8\xf3\x92\x3c\xe1\x20\xfa\xdf\xb6\x66\x78\xbd\x3d\x45\x00\x25\xe8\x64\xfb\x0e\xdc\x56\x8e\xd9\x55\xdb\x36\xdb\xc5\x38\x92\xcb\xb4\x2c\x71\xe5\x9b\x72\x69\x6b\xc2\x63\x81\xaf\x5b\x68\xf6\xd8\x8d\xb3\xab\x80\xfe\x04\xba\xf4\x27\xf0\x08\xfa\x49\x5b\x01\xbb\x23\x04\x15\xea\x97\xde\x1a\x45\xf7\xec\x6a\x06\xd9\x15\xa5\x2d\xc7\x6d\xd6\xb0\xe5\x67\x4c\x74\xe6\x38\xbb\x52\xb5\x8d\xf0\x7d\x82\x09\x3c\x33\xc8\x11\x4a\xd4\x5a\x72\xa1\x47\x75\x32\x61\x70\x0d\x22\xfc\x5f\x12\x47\xb7\x5c\x1d\x56\xf7\xa5\x14\x7f\xa4\x85\xf9\xa0\xd5\x76\xb3\xab\xe3\x48\x9a\xbb\x09\xc8\xb4\x94\xb8\xe2\xac\xe6\x18\xfe\x51\x98\xe5\x29\x3f\xe5\x86\xad\x33\xc1\x09\x82\xe8\xed\x42\xbc\xcf\xb2\x31\x31\x58\x28\x1b\x12\x6c\x21\x9b\x61\x8e\x1a\x6e\x17\xe2\x4c\x95\xc8\x8d\x96\x57\x36\xe7\xce\xec\x4a\x9c\xda\xfb\xb1\x14\x8d\xbc\x40\x0a\x2b\xa7\x81\xba\x20\xf1\x44\xdd\xdb\xbe\xb5\x89\xa3\xa6\xc2\x25\xa9\x90\xfc\xac\xf0\x1a\x61\x79\x33\x48\x6c\xd3\xd9\xab\xa2\xa2\x0a\x57\x68\x4d\x94\x39\x50\x21\x33\xa3\x6b\x99\x56\x08\x2c\xd3\xb7\x27\xf4\x97\x1f\xd6\xb6\xff\xac\xc7\xad\x07\xf0\x00\x2d\x38\x3d\xc4\x11\xc9\x85\xa4\xcc\xed\xaa\x64\x9c\x44\x28\xb1\x1b\x7d\x45\xfe\xf6\x84\x9e\xc6\x91\x15\xff\x98\xb5\xd4\xec\x6b\x5b\x40\xad\xe3\x1a\x86\xe7\x5e\xa1\x1d\x75\x93\x6b\x6b\x50\x2f\x93\xe7\x48\x5c\xf1\xb7\xab\xf4\x90\x46\x9b\x4e\xdb\x97\xc5\xcd\x2b\x1f\xd0\x58\xdd\x16\x0f\x37\x2e\xbe\x16\xc6\x2e\xa9\x06\xd1\x77\x6a\xf3\x7b\x11\xf4\x60\xab\x6f\x41\xf6\xcb\xdb\x27\x68\xf6\x2f\xab\x34\xfe\x46\xe5\xfa\x33\x38\xcc\xff\xf5\x4a\x7e\xa9\x9a\xef\xef\xd2\x31\x9f\xe7\x7f\x2e\xdc\x64\xfb\xef\x5b\x77\x73\x4b\xf8\x52\x2a\x77\x42\x68\x16\x2e\xb6\x57\x56\xcd\x16\xf0\x70\x29\xda\x19\xa2\x05\xc3\x91\x16\x37\xa7\xe5\x27\x6a\x1f\x29\xed\x0e\xa5\xfa\x68\x93\x96\x85\x7c\x92\xa6\x47\xf0\x13\x91\xb1\x46\x62\xcb\x10\x56\x79\xd7\x8c\x9c\x72\xec\x81\xd1\x59\x5e\x9d\x3c\xd6\x0c\xfe\xc2\x6e\xe8\x45\xfd\x3a\x1a\x9a\xef\x9d\x5f\x2f\xea\xfa\xd0\x50\x9a\xc7\x4e\x06\xf5\x0c\xc0\x53\xfb\x88\xb7\xdd\x03\xf2\xd0\xe7\xb4\xa9\x94\xc5\xe1\x5a\xf9\xb1\xf2\xfb\x86\x06\xf0\x3f\x43\x7e\xdd\x03\x7e\xb3\xfc\x5e\xba\xe7\xe5\xfe\x6f\x2f\x23\x0c\x08\xb0\x3b\x46\x7d\x56\xf4\x1e\xc2\x41\xee\xed\x7d\x7d\x2f\x7a\x77\x91\x39\x8d\x9f\x37\xe1\xeb\x59\xa9\x64\xb3\xbd\xda\x63\x83\x2d\xfd\x7f\xcf\xec\xf5\xa4\xcc\xf5\xec\x21\x46\xd0\x4f\xb3\xa0\xcf\x6c\x8b\x79\xd4\xa1\x6c\xad\xd0\x9f\x32\x9e\x0c\xcc\x3f\x1e\x85\xfd\x3b\xcd\x48\x78\xb6\xff\x25\xb0\x77\xeb\x66\x96\x6c\x20\xb3\x09\x3c\xcd\xd2\x87\x8c\x4b\x63\xb5\x5d\x85\xbe\xe5\xea\xc6\x06\x65\x97\x9d\x98\x9f\x3d\x89\xe3\x02\x0d\x68\xac\x36\xaa\xac\xf0\x90\xf9\x34\x08\xac\x0d\x35\xdf\x6c\x9c\xd4\xfd\xd9\x72\x33\x1a\xf6\xf3\xe3\x81\xe9\xef\x2f\x36\x9d\x56\x9d\xf9\xef\xb0\xc2\x1f\x1e\x78\x69\xfc\x0a\x5c\x0c\xef\xe9\x13\x3a\x0a\x85\x01\x8d\xb6\x55\xb3\xaf\x48\xe2\xe0\x73\x94\xe0\xcb\x13\x6b\xaf\x64\x6f\xfd\x0f\x15\xfe\x51\x54\x06\xcb\xe1\x7f\x9e\xbb\xb1\x5e\xff\xab\x84\x70\x90\xe6\x48\xb6\x83\xb4\x65\x23\x9c\x01\x81\xb5\x63\xb6\xc1\x39\x9b\x1f\xb4\x65\xaa\xb4\xdf\xb1\xf0\x98\xc8\xd2\xe6\x69\x90\x1d\x90\xc1\xf0\x3f\x6b\x0f\xcc\xde\x2c\xc2\xfe\xec\xed\x18\x4c\x3f\x92\x39\xd7\x98\x17\x77\x03\xf3\xb9\x7d\xe6\x1d\xb7\x75\x42\xe9\x8e\xe6\x7a\xab\x64\xd0\x0d\x88\x99\x87\x33\x34\xa8\xb3\x28\x26\x9d\x61\x1e\x49\x68\x16\x8c\xd2\x1a\x19\x25\x0f\x4d\xf5\x2a\x1b\x7a\xba\x58\x12\x78\xd0\x0a\x5e\x7c\x82\xe7\x4a\x12\x3f\x6b\x1a\x9e\x1f\xb7\x13\x3d\x80\xe3\x23\xbd\x28\xea\x0e\xf5\xaa\xb0\x50\x72\xdf\xa0\x89\x4b\x5d\xac\x2f\xb6\x79\x5e\xdc\x8d\xab\xb6\x76\x1a\x89\x51\x02\x3f\xc1\x48\x78\x45\x8f\x26\x50\x05\xf1\xbf\x89\x91\x0f\x0e\xff\x18\x44\xaf\xc5\x7c\xb9\xce\xa3\xda\xcf\xdc\xdd\x68\xfe\xec\xce\xa3\x43\xe6\x78\xd7\x61\xc3\xf0\x84\xbf\x36\xb4\xa0\x1a\xdb\x16\xbd\x58\xd8\xb6\x22\x8c\xa9\xd9\x1a\xfe\xcf\xb3\x1b\xf3\x89\x64\xcb\x2a\xc3\xaf\xbf\x7b\x6e\x7d\x09\xec\xa5\x96\xa6\x6a\x6b\xb8\x3c\x56\x12\x1e\x95\xca\xa1\x09\xa6\x5d\xca\xbd\xea\x6d\x58\x36\xed\x49\x5e\x77\x70\xbb\x23\xd5\x07\x86\xbf\xed\x23\x69\xee\xdc\x77\x48\x16\xa6\xad\xd5\xc2\x2c\xe8\x8d\xb5\x93\x02\x1d\xf3\xe9\x14\xe6\x39\x94\x8a\xbf\xc3\x2a\x2a\xd0\x28\x0b\xbc\x29\xca\x05\x98\x25\x96\xfc\xf1\x97\xda\x1a\xd7\xbf\xf3\xe7\x5c\xe9\x4a\x63\x9a\xdd\xf3\x87\x75\x16\x3a\x66\xfd\x79\xf4\xe0\x0c\x3a\x1c\x52\x07\xf3\xe8\x20\x2f\xf5\xa7\xf1\x0f\x8c\xa3\x5b\x8e\xcc\xef\xed\x49\x25\x38\xfc\x75\x2a\x82\xd8\x83\x69\x47\xd7\xc1\x1b\x6e\x52\xf3\x50\x18\x0c\x3e\x51\xb2\x40\x2c\x2b\x4e\x7d\x61\xcd\x10\xff\x2b\x00\x00\xff\xff\x67\xbc\x29\xcd\x5e\x2b\x00\x00")

func out_go_tpl() ([]byte, error) {
	return bindata_read(
		_out_go_tpl,
		"out.go.tpl",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"out.go.tpl": out_go_tpl,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"out.go.tpl": &_bintree_t{out_go_tpl, map[string]*_bintree_t{
	}},
}}
