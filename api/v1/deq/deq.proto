syntax = "proto3";
package deq;

service DEQ {
  rpc Pub (PubRequest) returns (Event);
  rpc Sub (SubRequest) returns (stream Event);
  rpc Ack (AckRequest) returns (AckResponse);
}

message Event {
  // Required.
  bytes id = 1;
  // Required.
  string type_url = 2;
  bytes payload = 3;
  // bytes parent_event_id = 4;
  // int32 min_retries = 4;
}

message PubRequest {
  Event event = 1;
  string delay_queue_channel = 2;
  uint32 delay_queue_miliseconds = 3;
}

message SubRequest {
  // Required.
  string channel = 1;
  string type_url = 2;
  string min_id = 3; // prefix ?
  string max_id = 4;
  bool   follow = 5;
  // uint32 requeue_delay_miliseconds = 6;
}

message AckRequest {
  // Required.
  string channel = 1;
  // Required.
  bytes event_id = 2;
  // Required.
  AckCode code = 3;
}

enum AckCode {
  UNSPECIFIED = 0;

  DEQUEUE_PROCESSED = 1;
  DEQUEUE_FAILED = 2;

  REQUEUE_CONSTANT = 3;
  REQUEUE_LINEAR = 4;
  REQUEUE_EXPONENTIAL = 5;

  TOUCH = 6;
}

message AckResponse {

}
